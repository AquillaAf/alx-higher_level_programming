=========================================
Modules to divide all element of a matrix
=========================================

This module defines a matrix division function `matrx_divided(matrix, div)`

Usage
=====
`matrix_divided(...)` returns a new matrix, from the division from div parameter`

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> print(matrix_divided([[3,6,10],[4,12,9]], 3))
		[[1.0, 2.0, 3.33], [1.33, 4.0, 3.0]]

The matrix output is always rounded up the nearest two decimal place

The function can accept floating number as elements
::
	>>> matrix = [[2, 7.1, 3],[5.0, 8, 4.0]]
	>>> print(matrix_divided(matrix, 2))
	[[1.0, 3.55, 1.50], [2.5, 4.0, 2.0]]


The matrix must be a list of list with the equal number of element in
each list, otherwise a failure error is raised
::
	>>> matrix = [2, 7.1, 3]
	>>> print(matrix_divided(matrix, 2))
	TraceBack: (most recent call)		
	matrix must be a matrix (list of lists) of integers/floats

If list is empty, the function fails and returns error message
::
	>>> matrix = []
	>>> print(matrix_divided(matrix, 3))
        TraceBack: (most recent call)
        matrix must be a matrix (list of lists) of integers/floats

If list is None, function fails
::
	>>> matrix = [None]
	>>> print(matrix_divided(matrix, 2))
        TraceBack: (most recent call)
        matrix must be a matrix (list of lists) of integers/floats


Function is successful if its an empty list of list
::
	>>> matrix 
	>>> print(matrix_divided(matrix, 2))
	[[]]


The function will fail if each row of matrix have different size
::
		
	>>> matrix = [
	...	[ 7.1, 3],
	...	[5.0, 8, 4.0]
	...	]
	>>> print(matrix_divided(matrix, 4))
	TraceBack: (most recent call)
	Each row of the matrix must have the same size

The function will fail if the divisor is not an integer or float
::
	>>> matrix = [
	...	[2, 7, 3],
        ...     [3, 9, 4]
        ...    ]
	>>> print(matrix_divided(matrix, "str"))
	TraceBack: (most recent call)
	div must be a number

::	
	 >>> matrix = [
	 ...    [2, 7, 3],
         ...   	[3, 9, 4]
         ...    ]
        >>> print(matrix_divided(matrix, 0))
        TraceBack: (most recent call)
	division by zero
